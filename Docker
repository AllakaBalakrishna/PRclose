# Use a minimal base image for the final application
FROM alpine:3.14 AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk --no-cache add gcc g++ make

# Copy only the necessary build files (e.g., package.json and package-lock.json)
COPY package*.json ./

# Install Node.js dependencies (can vary depending on your application)
RUN npm install

# Copy the rest of the application source code
COPY . .

# Build your application (modify this according to your specific build process)
RUN npm run build

# Start a new stage for the final production image
FROM nginx:1.21

# Copy the built files from the previous stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Start the Nginx server
CMD ["nginx", "-g", "daemon off;"]
